# This Workflow will build a docker ocntainer and publish it on the github container registry
name: Build and Publish default-backend container

# Define when the workflow will run
on:
  # Run on commit 
  push:
    branches: [ main ]
    paths: 
      - images/default-backend/*
      - .github/workflows/build-and-publish-default-backend.yml
  # Run once a week to update the image to latest version
  schedule:
    - cron: '0 2 * * */7'
  # Allow run on demand
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-default-backend
  VERSION: "latest"
  
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Build image
        run: |
          cd images/default-backend
          docker build --no-cache --build-arg RUNS_ON_GITHUB=true -t ${{ github.sha }} .

      # Set commit sha as tag if event is push
      - name: Set comit sha as tag and include day so cron can not overwrite it
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"        

      - name: Tag image
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ steps.date.outputs.date }}"
          echo "${{ github.sha }}"

          docker tag ${{ github.sha }} ${IMAGE_NAME}:${VERSION}
          docker tag ${{ github.sha }} ${IMAGE_NAME}:${VERSION}-${{ github.sha }}
          docker tag ${{ github.sha }} ${REGISTRY}/${IMAGE_NAME}:${VERSION}
          docker tag ${{ github.sha }} ${REGISTRY}/${IMAGE_NAME}:${VERSION}-${{ github.sha }}

      - name: Tag image
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          docker tag ${{ github.sha }} ${IMAGE_NAME}:${VERSION}
          docker tag ${{ github.sha }} ${IMAGE_NAME}:${VERSION}-${{ github.sha }}-${{ steps.date.outputs.date }}
          docker tag ${{ github.sha }} ${REGISTRY}/${IMAGE_NAME}:${VERSION}
          docker tag ${{ github.sha }} ${REGISTRY}/${IMAGE_NAME}:${VERSION}-${{ github.sha }}-${{ steps.date.outputs.date }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        id: connect
        run: |
          echo "${{ secrets.GH_TOKEN }}" | docker login ${REGISTRY} -u ${{ github.actor }} --password-stdin

      - name: Push tags to GitHub Container Registry
        if: github.event_name != 'pull_request'
        id: push
        run: |
          docker push ${REGISTRY}/${IMAGE_NAME}:${VERSION}-${{ github.sha }}
          docker push ${REGISTRY}/${IMAGE_NAME}:${VERSION}
